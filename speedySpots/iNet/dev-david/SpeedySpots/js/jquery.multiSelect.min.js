if (jQuery) (function ($) { function renderOption(a, b) { var c = '<label><input type="checkbox" name="' + a + '[]" value="' + b.value + '"'; if (b.selected) { c += ' checked="checked"' } c += " />" + b.text + "</label>"; return c } function renderOptions(a, b, c) { var d = ""; for (var e = 0; e < b.length; e++) { if (b[e].optgroup) { d += '<label class="optGroup">'; if (c.optGroupSelectable) { d += '<input type="checkbox" class="optGroup" />' + b[e].optgroup } else { d += b[e].optgroup } d += '</label><div class="optGroupContainer">'; d += renderOptions(a, b[e].options, c); d += "</div>" } else { d += renderOption(a, b[e]) } } return d } function buildOptions(a) { var b = $(this); var c = b.next(".multiSelectOptions"); var d = b.data("config"); var e = b.data("callback"); c.html(""); var f = ""; if (d.selectAll) { f += '<label class="selectAll"><input type="checkbox" class="selectAll" />' + d.selectAllText + "</label>" } f += renderOptions(b.attr("id"), a, d); c.html(f); var g = c.width(); var h = false; if (c.height() > d.listHeight) { c.css("height", d.listHeight + "px"); h = true } else { c.css("height", "") } var i = h && g == c.width() ? 17 : 0; if (c.width() + i < b.outerWidth()) { c.css("width", b.outerWidth() - 2 + "px") } else { c.css("width", c.width() + i + "px") } if ($.fn.bgiframe) b.next(".multiSelectOptions").bgiframe({ width: c.width(), height: c.height() }); if (d.selectAll) { c.find("INPUT.selectAll").click(function () { c.find("INPUT:checkbox").attr("checked", $(this).attr("checked")).parent("LABEL").toggleClass("checked", $(this).attr("checked")) }) } if (d.optGroupSelectable) { c.addClass("optGroupHasCheckboxes"); c.find("INPUT.optGroup").click(function () { $(this).parent().next().find("INPUT:checkbox").attr("checked", $(this).attr("checked")).parent("LABEL").toggleClass("checked", $(this).attr("checked")) }) } c.find("INPUT:checkbox").click(function () { $(this).parent("LABEL").toggleClass("checked", $(this).attr("checked")); updateSelected.call(b); b.focus(); if ($(this).parent().parent().hasClass("optGroupContainer")) { updateOptGroup.call(b, $(this).parent().parent().prev()) } if (e) { e($(this)) } }); c.each(function () { $(this).find("INPUT:checked").parent().addClass("checked") }); updateSelected.call(b); if (d.optGroupSelectable) { c.find("LABEL.optGroup").each(function () { updateOptGroup.call(b, $(this)) }) } c.find("LABEL:has(INPUT)").hover(function () { $(this).parent().find("LABEL").removeClass("hover"); $(this).addClass("hover") }, function () { $(this).parent().find("LABEL").removeClass("hover") }); b.keydown(function (a) { var c = $(this).next(".multiSelectOptions"); if (c.css("visibility") != "hidden") { if (a.keyCode == 9) { $(this).addClass("focus").trigger("click"); $(this).focus().next(":input").focus(); return true } if (a.keyCode == 27 || a.keyCode == 37 || a.keyCode == 39) { $(this).addClass("focus").trigger("click") } if (a.keyCode == 40 || a.keyCode == 38) { var d = c.find("LABEL"); var f = d.index(d.filter(".hover")); var g = -1; if (f < 0) { c.find("LABEL:first").addClass("hover") } else if (a.keyCode == 40 && f < d.length - 1) { g = f + 1 } else if (a.keyCode == 38 && f > 0) { g = f - 1 } if (g >= 0) { $(d.get(f)).removeClass("hover"); $(d.get(g)).addClass("hover"); adjustViewPort(c) } return false } if (a.keyCode == 13 || a.keyCode == 32) { var h = c.find("LABEL.hover INPUT:checkbox"); h.attr("checked", !h.attr("checked")).parent("LABEL").toggleClass("checked", h.attr("checked")); if (h.hasClass("selectAll")) { c.find("INPUT:checkbox").attr("checked", h.attr("checked")).parent("LABEL").addClass("checked").toggleClass("checked", h.attr("checked")) } updateSelected.call(b); if (e) e($(this)); return false } if (a.keyCode >= 33 && a.keyCode <= 126) { var i = c.find("LABEL:startsWith(" + String.fromCharCode(a.keyCode) + ")"); var j = i.index(i.filter("LABEL.hover")); var k = i.filter(function (a) { return a > j }); i = (k.length >= 1 ? k : i).filter("LABEL:first"); if (i.length == 1) { c.find("LABEL.hover").removeClass("hover"); i.addClass("hover"); adjustViewPort(c) } } } else { if (a.keyCode == 38 || a.keyCode == 40 || a.keyCode == 13 || a.keyCode == 32) { $(this).removeClass("focus").trigger("click"); c.find("LABEL:first").addClass("hover"); return false } if (a.keyCode == 9) { c.next(":input").focus(); return true } } if (a.keyCode == 13) return false }) } function adjustViewPort(a) { var b = a.find("LABEL.hover").position().top + a.find("LABEL.hover").outerHeight(); if (b > a.innerHeight()) { a.scrollTop(a.scrollTop() + b - a.innerHeight()) } if (a.find("LABEL.hover").position().top < 0) { a.scrollTop(a.scrollTop() + a.find("LABEL.hover").position().top) } } function updateOptGroup(a) { var b = $(this); var c = b.data("config"); if (c.optGroupSelectable) { var d = true; $(a).next().find("INPUT:checkbox").each(function () { if (!$(this).attr("checked")) { d = false; return false } }); $(a).find("INPUT.optGroup").attr("checked", d).parent("LABEL").toggleClass("checked", d) } } function updateSelected() { var a = $(this); var b = a.next(".multiSelectOptions"); var c = a.data("config"); var d = 0; var e = true; var f = ""; b.find("INPUT:checkbox").not(".selectAll, .optGroup").each(function () { if ($(this).attr("checked")) { d++; f = f + $(this).parent().text() + ", " } else e = false }); f = f.replace(/\s*\,\s*$/, ""); if (d == 0) { a.find("span").html(c.noneSelected) } else { if (c.oneOrMoreSelected == "*") { a.find("span").html(f); a.attr("title", f) } else { a.find("span").html(c.oneOrMoreSelected.replace("%", d)) } } if (c.selectAll) { b.find("INPUT.selectAll").attr("checked", e).parent("LABEL").toggleClass("checked", e) } } $.extend($.fn, { multiSelect: function (a, b) { if (!a) a = {}; if (a.selectAll == undefined) a.selectAll = true; if (a.selectAllText == undefined) a.selectAllText = "Select All"; if (a.noneSelected == undefined) a.noneSelected = "Select options"; if (a.oneOrMoreSelected == undefined) a.oneOrMoreSelected = "% selected"; if (a.optGroupSelectable == undefined) a.optGroupSelectable = false; if (a.listHeight == undefined) a.listHeight = 150; $(this).each(function () { var c = $(this); var d = '<a href="javascript:;" class="multiSelect"><span></span></a>'; d += '<div class="multiSelectOptions" style="position: absolute; z-index: 99999; visibility: hidden;"></div>'; $(c).after(d); var e = $(c).next(".multiSelect"); var f = e.next(".multiSelectOptions"); e.find("span").css("width", $(c).width() + "px"); e.data("config", a); e.data("callback", b); var g = []; $(c).children().each(function () { if (this.tagName.toUpperCase() == "OPTGROUP") { var a = []; g.push({ optgroup: $(this).attr("label"), options: a }); $(this).children("OPTION").each(function () { if ($(this).val() != "") { a.push({ text: $(this).html(), value: $(this).val(), selected: $(this).attr("selected") }) } }) } else if (this.tagName.toUpperCase() == "OPTION") { if ($(this).val() != "") { g.push({ text: $(this).html(), value: $(this).val(), selected: $(this).attr("selected") }) } } }); $(c).remove(); e.attr("id", $(c).attr("id")); buildOptions.call(e, g); e.hover(function () { $(this).addClass("hover") }, function () { $(this).removeClass("hover") }).click(function () { if ($(this).hasClass("active")) { $(this).multiSelectOptionsHide() } else { $(this).multiSelectOptionsShow() } return false }).focus(function () { $(this).addClass("focus") }).blur(function () { $(this).removeClass("focus") }); $(document).click(function (a) { if (!$(a.target).parents().andSelf().is(".multiSelectOptions")) { e.multiSelectOptionsHide() } }) }) }, multiSelectOptionsUpdate: function (a) { buildOptions.call($(this), a) }, multiSelectOptionsHide: function () { $(this).removeClass("active").removeClass("hover").next(".multiSelectOptions").css("visibility", "hidden") }, multiSelectOptionsShow: function () { var a = $(this); var b = a.next(".multiSelectOptions"); var c = a.data("config"); $(".multiSelect").multiSelectOptionsHide(); b.find("LABEL").removeClass("hover"); a.addClass("active").next(".multiSelectOptions").css("visibility", "visible"); a.focus(); a.next(".multiSelectOptions").scrollTop(0); var d = a.position(); a.next(".multiSelectOptions").css({ top: d.top + $(this).outerHeight() + "px" }); a.next(".multiSelectOptions").css({ left: d.left + "px" }) }, multiSelectUpdateSelected: function () { var a = $(this); updateSelected.call(a) }, selectedValuesString: function () { var a = ""; $(this).next(".multiSelectOptions").find("INPUT:checkbox:checked").not(".optGroup, .selectAll").each(function () { a += $(this).attr("value") + "," }); return a.replace(/\s*\,\s*$/, "") } }); $.expr[":"].startsWith = function (el, i, m) { var search = m[3]; if (!search) return false; return eval("/^[/s]*" + search + "/i").test($(el).text()) } })(jQuery)